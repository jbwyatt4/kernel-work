From 4fcd70ad00b681be7b000e1220cf29ea37f16e57 Mon Sep 17 00:00:00 2001
From: "John B. Wyatt IV" <jbwyatt4@gmail.com>
Date: Sat, 3 Jul 2021 20:15:23 -0700
Subject: [PATCH 1/1] Create sched_core_thread_cookie tracepoint

---
 include/trace/events/sched.h | 30 ++++++++++++++++++++++++++++++
 kernel/sched/core.c          |  2 ++
 2 files changed, 32 insertions(+)

diff --git a/include/trace/events/sched.h b/include/trace/events/sched.h
index c96a4337afe6..37ddf6b8a2d4 100644
--- a/include/trace/events/sched.h
+++ b/include/trace/events/sched.h
@@ -9,6 +9,36 @@
 #include <linux/tracepoint.h>
 #include <linux/binfmts.h>
 
+/*
+ * Tracepoint for reporting sched_switch's core group cookie
+ */
+TRACE_EVENT(sched_core_thread_cookie,
+
+	TP_PROTO(struct task_struct *prev_core_t, struct task_struct *next_core_t, signed int report_type, unsigned long core_group_cookie ),
+
+	TP_ARGS(prev_core_t, next_core_t, report_type, core_group_cookie),
+
+	TP_STRUCT__entry(
+		__field(	pid_t, prev_pid)
+		__field(	pid_t, next_pid)
+		__field(        signed int, report_type )
+		__field(	unsigned long, prev_cookie)
+		__field(	unsigned long, next_cookie)
+		__field(	unsigned long, core_group_cookie)
+	),
+
+	TP_fast_assign(
+		__entry->prev_pid = prev_core_t->pid;
+		__entry->next_pid = next_core_t->pid;
+		__entry->report_type = report_type;
+		__entry->prev_cookie = prev_core_t->core_cookie;
+		__entry->next_cookie = next_core_t->core_cookie;
+		__entry->core_group_cookie = core_group_cookie;
+	),
+
+	TP_printk("Report Type=%d Prev PID=%d Next PID=%d Prev Cookie=%lu Next Cookie=%lu core_group_cookie=%lu", __entry->report_type, __entry->prev_pid, __entry->next_pid, __entry->prev_cookie, __entry->next_cookie, __entry->core_group_cookie)
+);
+
 /*
  * Tracepoint for calling kthread_stop, performed to end a kthread:
  */
diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 26235b06103c..d9acc1c88231 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -5046,6 +5046,7 @@ pick_next_task(struct rq *rq, struct task_struct *prev, struct rq_flags *rf)
 			     next->core_cookie);
 
 		rq->core_pick = NULL;
+		trace_sched_core_thread_cookie(prev, next, 1, rq->core->core_cookie);
 		return next;
 	}
 
@@ -5242,6 +5243,7 @@ pick_next_task(struct rq *rq, struct task_struct *prev, struct rq_flags *rf)
 	}
 
 done:
+	trace_sched_core_thread_cookie(prev, next, 2, rq->core->core_cookie);
 	set_next_task(rq, next);
 	return next;
 }
-- 
2.25.1

